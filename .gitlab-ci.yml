image: docker:git
stages:
  - build
  - deploy

build_test:
  stage: build
  image: golang:1.13
  script:
    - chmod a+x .config.sh
    - ./.config.sh > conf/dev/app.conf
    - export GO111MODULE=on
    - export GOPROXY=https://goproxy.cn,direct
    - go mod vendor
    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o $CI_PROJECT_NAME ./main.go
    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o migrate ./migrate.go
  artifacts:
    expire_in: 2 days
    paths:
      - $CI_PROJECT_NAME
      - migrate
      - migration
      - conf
  only:
    - test

deploy_test:
  stage: deploy
  image: sebble/deploy
  script:
    - mkdir -p ~/.ssh
    - echo "$TEST_DEPLOY_SSH" >> ~/.ssh/id_dsa
    - chmod 600 ~/.ssh/id_dsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh -p 1078 -t "$TEST_DEPLOY_USER"@"$TEST_DEPLOY_HOST" "mkdir -p /data/mygo/src/$CI_PROJECT_NAME"
    - rsync -avz -e 'ssh -p 1078' $CI_PROJECT_NAME "$TEST_DEPLOY_USER"@"$TEST_DEPLOY_HOST":/data/mygo/src/$CI_PROJECT_NAME
    - rsync -avz -e 'ssh -p 1078' migrate "$TEST_DEPLOY_USER"@"$TEST_DEPLOY_HOST":/data/mygo/src/$CI_PROJECT_NAME
    - rsync -avz -e 'ssh -p 1078' migration "$TEST_DEPLOY_USER"@"$TEST_DEPLOY_HOST":/data/mygo/src/$CI_PROJECT_NAME
    - rsync -avz -e 'ssh -p 1078' conf "$TEST_DEPLOY_USER"@"$TEST_DEPLOY_HOST":/data/mygo/src/$CI_PROJECT_NAME
    - ssh -p 1078 -t "$TEST_DEPLOY_USER"@"$TEST_DEPLOY_HOST" << EOF
    - cd /data/mygo/src/$CI_PROJECT_NAME
    - ./migrate &>> migrate.log
    - /usr/sbin/pidof $CI_PROJECT_NAME && /usr/sbin/pidof $CI_PROJECT_NAME | xargs kill -9
    - /usr/sbin/pidof $CI_PROJECT_NAME || (nohup ./$CI_PROJECT_NAME &>> out.log &)
    - EOF
  only:
    - test



build_master:
  stage: build
  image: golang:1.13
  script:
    - chmod a+x .config.sh
    - ./.config.sh
  only:
    - master


build_tag:
  stage: build
  image: golang:1.13
  script:
    - chmod a+x .config.sh
    - ./.config.sh
  only:
    - tags
